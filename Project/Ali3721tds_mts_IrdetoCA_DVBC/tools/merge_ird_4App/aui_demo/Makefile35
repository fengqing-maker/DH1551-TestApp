#
# -= Makefile for application =-
#
# Note:
# . "make config" must be done for initial routines.
#
# Usage:
# . Change the ROOT definition, if necessary;
#   Make it point to the root of the software tree.
#
# Detect compile environment and specify compiler
OS := $(shell uname -s)
IS_LINUX  := $(shell echo $(OS) | grep -i linux)
IS_CYGWIN := $(shell echo $(OS) | grep -i cygwin)

# Destination to the root of software tree
RUN_DIR = d:/winice
ROOT = ../../../../..
ROOT_PRJ = ../prj/app/demo/combo/aui_demo
PMU_SRC = ${ROOT}/src/lld/pmu/mcu/keil_prj
RLS_DATE = $(shell date +%y%m%d)
RLS_NAME = Combo_SAB_$(RLS_DATE)

include ${ROOT}/src/path.def
include ${ROOT}/src/compiler.def

ifdef _LINUX_COMPILER_ENVIRONMENT_
LIBE =
LIBSTDCPP = -lstdc++
else
LIBE = -le
LIBSTDCPP =
endif

CA_AS_DIR = bl_tool
CONAX_AP_DIR =
ifdef _CAS7_CA_ENABLE_
CONAX_AP_DIR = conax_ap7
endif
CA_AP_DIR = conax_ap
ifdef _DVBS_ENABLE_
NIM_S2_LIB = -lnim_s2
else
NIM_S2_LIB =
endif
# Temp solution, for compile ok now, will reorganize soon
ifdef _BOARD_DB_M3515B_01V01_
CA_AP_DIR = c0200a_ap
endif
ifdef _C0200A_CA_ENABLE_
CA_AP_DIR = c0200a_ap
EXTRA_LIBS += ${BASE_DIR}/aui/output/tds/libaui.a
ifndef _BUILD_UPG_LOADER_
ifdef _C0200A_CA_DAL_TEST_
EXTRA_LIBS += ${ROOT_PRJ}/${CA_AP_DIR}/dalts.cak7-merlin.release.mips-sde-elf-gcc.a
else
EXTRA_LIBS += ${ROOT_PRJ}/${CA_AP_DIR}/cak_me.standard.release.mips-sde-elf-gcc.a
EXTRA_LIBS += ${ROOT_PRJ}/${CA_AP_DIR}/cak_me.standard.release.mips-sde-elf-gcc-NAK.a
endif
endif
EXTRA_LIBS += ${ROOT_PRJ}/${CA_AP_DIR}/ssd_rel.a
endif

ifndef _BUILD_OTA_E_
SEELIB = libsee_m35
else
  ifdef _BUILD_USB_LOADER_
    SEELIB = libsee_m35
  else
    SEELIB = libsee_m35_ota
  endif
endif
BOOT_SEE = boot_see
MPG_LIB = libmpg2c
PLUGIN_PATH = ${PLUGINDDK_DIR}
PLUGIN_EXT_PATH = ${PLUGINEXT_DIR}
PLUGIN_OBJ = $(shell ls $(PLUGIN_PATH)/*.o )

ifdef _BOARD_M3515B_01V01_
PLUGIN_OBJ := $(filter \
	$(PLUGIN_PATH)/plugin_aacv2.o \
	$(PLUGIN_PATH)/plugin_ac32c_3503.o \
	$(PLUGIN_PATH)/plugin_eac3_3503.o \
	$(PLUGIN_PATH)/plugin_csa3.o \
	$(PLUGIN_PATH)/plugin_mp3.o, \
	$(PLUGIN_OBJ))
endif
ifdef _BOARD_M3515B_01V04_
PLUGIN_OBJ := $(filter \
	$(PLUGIN_PATH)/plugin_aacv2.o \
	$(PLUGIN_PATH)/plugin_ac32c_3503.o \
	$(PLUGIN_PATH)/plugin_eac3_3503.o \
	$(PLUGIN_PATH)/plugin_csa3.o \
	$(PLUGIN_PATH)/plugin_mp3.o, \
	$(PLUGIN_OBJ))
endif
ifdef _M3503B_ENABLE_
	MEMCFG_SUFFIX=B
else
	MEMCFG_SUFFIX=
endif

ifdef _BOARD_SB_M3511_01V01_
	# M3511 sorting board
	MEMCFG = memcfg_3511${MEMCFG_SUFFIX}_sorting.abs
else
ifdef _BOARD_DB_M3511_01V01_
	# M3511
	MEMCFG = memcfg_3511${MEMCFG_SUFFIX}.abs
else
ifdef _BOARD_DB_M3511_01V02_
	#3511
	MEMCFG =memcfg_3511${MEMCFG_SUFFIX}.abs
else
ifdef _BOARD_SB_M3515_01V01_
	# M3515 sorting board
	MEMCFG = memcfg_3515${MEMCFG_SUFFIX}_sorting.abs
else
ifdef _BOARD_SB_M3715_01V01_
	# M3715 sorting board
	MEMCFG = memcfg_3515${MEMCFG_SUFFIX}_sorting.abs
else
ifdef _BOARD_DB_M3515_01V01_
	# M3515
	MEMCFG = memcfg_3515${MEMCFG_SUFFIX}.abs
else
ifdef _BOARD_DB_M3515_01V04_
	# M3515
	MEMCFG = memcfg_3515${MEMCFG_SUFFIX}.abs
else
ifdef _BOARD_SB_M3512_01V01_
	# M3512 sorting board
	MEMCFG = memcfg_3512${MEMCFG_SUFFIX}_sorting.abs
else
ifdef _BOARD_DB_M3715_01V01_
	# M3715
	MEMCFG = memcfg_3515${MEMCFG_SUFFIX}.abs
else
	# M3512, M3516
	MEMCFG = memcfg_3512${MEMCFG_SUFFIX}.abs
endif
endif
endif
endif
endif
endif
endif
endif
endif

# output file name
OUT = Sabbat_s35x
SEE_OUT = see_sabbat_s35x

# Link Script File
ifdef _USE_64M_MEM_
	SEE_LSCR = see_ldscript_64M.ld
else
	SEE_LSCR = see_ldscript.ld
endif

ifdef _BUILD_OTA_E_
 ifdef DUAL_ENABLE
  ifdef _CAS9_CA_ENABLE_
	BSP = blocks_script_7z_ota_M3515_dual.txt
  else
	BSP = blocks_script_7z_ota_s3503_dual.txt
  endif
 else
  ifdef _COMPRESS_LZO
	BSP = blocks_script_7z_ota_lzo.txt
  else
	BSP = blocks_script_7z_ota.txt
  endif
 endif
else
 ifdef DUAL_ENABLE
  ifdef _CAS9_CA_ENABLE_
	BSP = blocks_script_7z_sabbat_m3515_dual_cas9.txt
  else
   ifdef _CAS7_CA_ENABLE_
	BSP = blocks_script_7z_sabbat_s3503_dual_swca.txt
   else
   ifdef _BOARD_M3515B_01V01_
   BSP = blocks_script_7z_sabbat_s3503b_dual.txt
   else 
	 BSP = blocks_script_7z_sabbat_s3503_dual.txt
	 endif
   endif
  endif
 else
  ifdef _CAS7_CA_ENABLE_
	BSP = blocks_script_7z_sabbat_s3503_single_swca.txt
  else
	BSP = blocks_script_7z_sabbat_s3503_single.txt
  endif
 endif
endif

ifdef _ACS_UPNP_ENABLE_
ifndef _BUILD_OTA_E_
	BSP = blocks_script_7z_sabbat_s3503_dual_swca_acs_upnp.txt
endif
endif

ifdef _ENABLE_ALI_DEMO_SBPSIGN_DEBUG_
BL_MERGE_CMD = blocks_script_bloader_ali.txt
else
BL_MERGE_CMD = blocks_script_bloader_c0200a.txt
endif

ifdef _CAS9_CA_ENABLE_
ifdef _ENABLE_BL_ENCRYPTED_
	BOOTLOADER_MA = bloader3_m3515_dual_encbl.abs
	BOOTLOADER_SEE = see_bloader3_encbl_s.abs
else
	BOOTLOADER_MA = bloader3_m3515_dual.abs
	BOOTLOADER_SEE = see_bloader3_s.abs
endif
ifdef _USE_64M_MEM_
	BOOTCFG35=boot_m35_64M_sec.cfg
	SIGPARA2=64M
	LOGOFILE=Logo_glass.m2v
else
	BOOTCFG35=boot_m35_128M_sec.cfg
	SIGPARA2=128M
	LOGOFILE=logo_enriching.m2v
endif
endif

ifdef _DVBS_ENABLE_
	DEF_DB = s2.ddf
else
 ifdef _DVBT_ENABLE_
	DEF_DB = dvbt.ddf
 else
  ifdef _ISDBT_ENABLE_
	DEF_DB=s2isdbt.ddf
  else
   ifdef _DVBC_ENABLE_
	DEF_DB = s2dvbc.ddf
   endif
  endif
 endif
endif

LIB_HDMI = $(DDK_DIR)/libHDMI.a

ifdef _LINUX_COMPILER_ENVIRONMENT_
TOOLS            = tools/tools_linux
TOOL            = ${ROOT}/prj/tools/tools_linux
PADDING          = padding_nv
SECURE1         = Secure_1
VERSION_APPENDER = version_appender_nv
SBP_SIGN_TEST    = sbp_sign_test_nv
MERGER           = merger_nv
SSD_SIGN_TEST    = ssd_sign_test_nv
BL_TOOL          = bl_tool
else
TOOLS = tools
TOOL = ${ROOT}/prj/tools
PADDING          = padding_nv.exe
SECURE1         = Secure_1.exe
VERSION_APPENDER = version_appender_nv.exe
SBP_SIGN_TEST    = sbp_sign_test_nv.exe
MERGER           = merger_nv.exe
SSD_SIGN_TEST    = ssd_sign_test_nv.exe
BL_TOOL          = bl_tool.exe
endif

ifdef _CAS9_CA_ENABLE_ 
merge_tool_t = fidmerger_ca
else
merge_tool_t = fidmerger
endif

ifdef _LINUX_COMPILER_ENVIRONMENT_
merge_tool = $(merge_tool_t)
else
merge_tool = $(merge_tool_t).exe
endif

ifdef _WIFI_ENABLE_
	USB_WIFI_LIB = $(DDK_DIR)/wifi/lib_rt5370_gusb.a
	NET_CTRL_LIB = $(DDK_DIR)/wifi/*.o
	NET_LINK = $(shell ls ${NET_CTRL_LIB})
endif

ifdef _USB3G_SUPPORT_
	USB_3G_LIB = $(DDK_DIR)/ali_3g/lib_3g_modem.a
endif

all :
	${MAKE} -f Makefile35.cmd release
	${MAKE} -f Makefile35.cmd all

path:
	./getpath.sh
	
ui :
	${MAKE} -f Makefile35.cmd all
linkonly :
	${MAKE} -f Makefile35.cmd linkonly

cfg_env_3503:
ifdef IS_LINUX
	sed -i 's/^#_LINUX_COMPILER_ENVIRONMENT_ = 1/_LINUX_COMPILER_ENVIRONMENT_ = 1/' compiler_3503.def
	sed -i 's/^_CYGWIN_COMPILER_ENVIRONMENT_ = 1/#_CYGWIN_COMPILER_ENVIRONMENT_ = 1/' compiler_3503.def
endif
ifdef IS_CYGWIN
	sed -i 's/^_LINUX_COMPILER_ENVIRONMENT_ = 1/#_LINUX_COMPILER_ENVIRONMENT_ = 1/' compiler_3503.def
	sed -i 's/^#_CYGWIN_COMPILER_ENVIRONMENT_ = 1/_CYGWIN_COMPILER_ENVIRONMENT_ = 1/' compiler_3503.def
endif

config_3503_common : cfg_env_3503
	cp -f sys_config_3503.h ${ROOT}/inc/sys_config.h
	cp -f sys_memmap_3503.h ${ROOT}/inc/sys_memmap.h
	cp -f compiler_3503.def ${ROOT}/src/compiler.def
	cp -f ${PMU_SRC}/ali_pmu_bin_3503.h  ${ROOT}/prj/app/demo/combo/aui_demo/ali_pmu_bin.h
	${MAKE} -f Makefile35.cmd logiscope

config_3503 : config_3503_common
	sed -i "s/0x80100000/0x80000200/g" ./ldscript.ld
	
config_3503B: config_3503_common
	sed -i "s/0x80000200/0x80100000/g" ./ldscript.ld

config_3503_ota_common : cfg_env_3503
	cp -f sys_config_3503.h ${ROOT}/inc/sys_config.h
	cp -f sys_memmap_3503.h ${ROOT}/inc/sys_memmap.h
	cp -f compiler_3503.def ${ROOT}/src/compiler.def
	echo "\n_BUILD_OTA_E_ = 1" >> ${ROOT}/src/compiler.def
	echo "DEFS += -D_BUILD_OTA_E_" >> ${ROOT}/src/compiler.def

config_3503_ota : config_3503_ota_common
	sed -i "s/0x80100000/0x80000200/g" ./ldscript.ld
	
config_3503B_ota : config_3503_ota_common
	sed -i "s/0x80000200/0x80100000/g" ./ldscript.ld

# sync command only used for Ali internal testing. 

sync :
	${MAKE} -f Makefile35.cmd sync
	
syncbl :
	${MAKE} -f Makefile35.cmd syncbl

clean :
	${MAKE} -f Makefile35.cmd clean

release :
	${MAKE} -f Makefile35.cmd release
	
new :
	${MAKE} -f Makefile35.cmd new

nim :
	${MAKE} -f Makefile35.cmd nim

sat2ip_lib :
	${MAKE} -f Makefile35.cmd sat2ip_lib

product_7z :
	echo Step 1: Compiler application ...
	${MAKE} all
	echo Step 2: Compress application bin file ...
	${MAKE} -f Makefile35.cmd compress_7z
	echo Step 3: Generate Flash file ...
	${MAKE} -f Makefile35.cmd generate_7z
	cp -f product_sabbat_*.abs $(ROOT)/obj/
	echo All finished!

define  compress_7z-cas9_ca_enable
	mv ${OUT} ${OUT}.bak
	mv ${SEE_OUT} ${SEE_OUT}.bak

	cd ../prj/${TOOLS}; \
	./code_build.exe ../../obj/${OUT}.map ../../obj/${OUT}.bak ../../obj/${OUT};\
	./code_build.exe ../../obj/${SEE_OUT}.map ../../obj/${SEE_OUT}.bak ../../obj/${SEE_OUT}

	rm -f ${ROOT_PRJ}/${CA_AP_DIR}/app.bin;
	rm -f ${ROOT_PRJ}/${CA_AP_DIR}/app_see.bin;
	cp -f ${OUT} ${ROOT_PRJ}/${CA_AP_DIR}/app.bin;
	cp -f ${SEE_OUT} ${ROOT_PRJ}/${CA_AP_DIR}/app_see.bin;

	cd ${ROOT_PRJ}/${CA_AP_DIR}; \
	cp -f ../${BSP} ./blocks_script_7z_sabbat_s3602_dual_ca.txt; \
	sed -i "s/0x06F90101/0x0AF50100/g" ./blocks_script_7z_sabbat_s3602_dual_ca.txt

	cd ${ROOT_PRJ}/${CA_AP_DIR}; \
	./pre_build_sec_M3515_fw_4m.bat
	../prj/${TOOLS}/lzma e ${ROOT_PRJ}/${CA_AP_DIR}/app_s.bin \
	                       ${ROOT_PRJ}/${CA_AP_DIR}/app_s.7z -lc0 -lp2
	../prj/${TOOLS}/lzma e ${ROOT_PRJ}/${CA_AP_DIR}/app_see_s.bin \
	                       ${ROOT_PRJ}/${CA_AP_DIR}/app_see_s.7z -lc0 -lp2
endef

define  compress_7z-c0200a_ca_enable
	rm -f ${ROOT_PRJ}/${CA_AP_DIR}/app.bin;
	rm -f ${ROOT_PRJ}/${CA_AP_DIR}/app_see.bin;
	cp -f ${OUT} ${ROOT_PRJ}/${CA_AP_DIR}/app.bin;
	cp -f ${SEE_OUT} ${ROOT_PRJ}/${CA_AP_DIR}/app_see.bin;
ifdef _BOOT_LOGO_ENABLE_
	rm -f ${ROOT_PRJ}/${CA_AP_DIR}/logo_enriching.m2v
	cp -f ${ROOT_PRJ}/logo_enriching.m2v ${ROOT_PRJ}/${CA_AP_DIR}/logo_enriching.m2v;
endif
	rm -f ${ROOT_PRJ}/${CA_AP_DIR}/upg_app.bin;
	rm -f ${ROOT_PRJ}/${CA_AP_DIR}/upg_app_see.bin;
	cp -f ${ROOT_PRJ}/upg_app.bin ${ROOT_PRJ}/${CA_AP_DIR}/upg_app.bin;
	cp -f ${ROOT_PRJ}/upg_app_see.bin ${ROOT_PRJ}/${CA_AP_DIR}/upg_app_see.bin;

	../prj/${TOOLS}/lzma e ${ROOT_PRJ}/${CA_AP_DIR}/app.bin \
	                       ${ROOT_PRJ}/${CA_AP_DIR}/app.7z -lc0 -lp2
	../prj/${TOOLS}/lzma e ${ROOT_PRJ}/${CA_AP_DIR}/app_see.bin \
	                       ${ROOT_PRJ}/${CA_AP_DIR}/app_see.7z -lc0 -lp2
ifdef _BOOT_LOGO_ENABLE_
	../prj/${TOOLS}/lzma e ${ROOT_PRJ}/${CA_AP_DIR}/logo_enriching.m2v \
	                       ${ROOT_PRJ}/${CA_AP_DIR}/logo_enriching.7z -lc0 -lp2
endif
	../prj/${TOOLS}/lzma e ${ROOT_PRJ}/${CA_AP_DIR}/upg_app.bin \
	                       ${ROOT_PRJ}/${CA_AP_DIR}/upg_app.7z -lc0 -lp2
	../prj/${TOOLS}/lzma e ${ROOT_PRJ}/${CA_AP_DIR}/upg_app_see.bin \
	                       ${ROOT_PRJ}/${CA_AP_DIR}/upg_app_see.7z -lc0 -lp2
endef

define compress_7z-normal
	../prj/${TOOLS}/lzma e ${OUT} ${OUT}.7z -lc0 -lp2
	../prj/${TOOLS}/lzma e ${SEE_OUT} ${SEE_OUT}.7z -lc0 -lp2
endef

define compress_7z-compress_lzo
	../prj/${TOOLS}/lzox99 ${OUT} ${OUT}.7z
	../prj/${TOOLS}/lzox99 ${SEE_OUT} ${SEE_OUT}.7z
endef

define dual_compress_7z
compress_7z:
	${OBJCOPY} -R .flash -O binary ${OUT}.out ${OUT};
	-${OBJCOPY} -j .flash -O binary ${OUT}.out flash.sec;
	${OBJCOPY} -R .flash -O binary ${SEE_OUT}.out ${SEE_OUT};
	-${OBJCOPY} -j .flash -O binary ${SEE_OUT}.out see_flash.sec;

	rm -f ${OUT}.7z;
	rm -f ${SEE_OUT}.7z;

ifdef _CAS9_CA_ENABLE_
	$(call compress_7z-cas9_ca_enable)
else
ifdef _C0200A_CA_ENABLE_
	$(call compress_7z-c0200a_ca_enable)
else
ifdef _BUILD_OTA_E_
	$(call compress_7z-normal)
else
ifdef _COMPRESS_LZO
	$(call compress_7z-compress_lzo)
else
	$(call compress_7z-normal)
endif
endif
endif
endif
endef

pre_boot_code_c0200a:
	$(call pre_boot_code-c0200a_ca_enable)

pre_boot_total_area_c0200a:
	$(call pre_boot_total_area-c0200a_ca_enable)

define pre_boot_code-c0200a_ca_enable
### generate the boot code
	cd ${ROOT_PRJ}/${CA_AP_DIR} && \
		cp ../bloader3_3503b_security.abs ./ && \
		dd if=bloader3_3503b_security.abs of=c0200a_bep.bin bs=8 count=1 skip=0 && \
		dd if=bloader3_3503b_security.abs of=c0200a_bootcode.bin bs=20 skip=1 && \
		../../../../../${TOOLS}/${SBP_SIGN_TEST} c0200a_bootcode.bin bootcode_sig_ali.bin;
endef

define pre_boot_total_area-c0200a_ca_enable
### generate the boot total area
	cd ${ROOT_PRJ}/${CA_AP_DIR}&& \
		../../../../../${TOOLS}/${MERGER} ${BL_MERGE_CMD}; \
	cp -f c0200a_bloader.bin ../${CA_AS_DIR}/bl_in.abs;

	cd ${ROOT_PRJ}/${CA_AS_DIR} && \
	../../../../../${TOOLS}/${BL_TOOL} script/M3515B_BL_Generate.cmd;

	@cp -f ${ROOT_PRJ}/${CA_AS_DIR}/ExtKey_Block_demo.abs ${ROOT_PRJ}/${CA_AS_DIR}/ExtKey_Block_demo_ali.abs;
	@cp -f ${ROOT_PRJ}/${CA_AS_DIR}/ExtKey_Block_sign_demo.abs ${ROOT_PRJ}/${CA_AS_DIR}/ExtKey_Block_sign_demo_ali.abs;
	@cp -f ${ROOT_PRJ}/${CA_AS_DIR}/Boot_Code_sign_demo.abs ${ROOT_PRJ}/${CA_AS_DIR}/Boot_Code_sign_demo_ali.abs;
	@cp -f ${ROOT_PRJ}/${CA_AS_DIR}/Params_Area_sign_demo.abs ${ROOT_PRJ}/${CA_AS_DIR}/Params_Area_sign_demo_ali.abs;
endef

pre_boot_code:
	${MAKE} -f Makefile35.cmd pre_boot_code

pre_boot_total_area:
	${MAKE} -f Makefile35.cmd pre_boot_total_area

define generate_7z-cas9_ca_enable
	cd ${ROOT_PRJ}/${CA_AP_DIR}; \
	./pre_build_sec_M3515_fw_encrypt.bat

	cp -f ${ROOT_PRJ}/$(DEF_DB) ${ROOT_PRJ}/factory_data_sabbat.bin 
	cp -f ${ROOT_PRJ}/loader3_AS_G2/${BOOTLOADER_MA} ${ROOT_PRJ}/bloader3_m3515_dual.abs
	cd ${ROOT_PRJ}; \
	../../../../${TOOLS}/${merge_tool} ${BSP}
ifndef _BUILD_OTA_E_
	cp -f ${ROOT_PRJ}/product_sabbat_*.abs ${ROOT_PRJ}/${CA_AP_DIR}/
	cp -f ${ROOT_PRJ}/loader3_AS_G2/${BOOTLOADER_SEE} ${ROOT_PRJ}/${CA_AP_DIR}/
 ifndef _ENABLE_BL_ENCRYPTED_
	cd ${ROOT_PRJ}/${CA_AP_DIR}; \
	./split_bl_merge_sign_test_M3515.bat
 else
	cd ${ROOT_PRJ}/${CA_AP_DIR}; \
	./split_encrypt_bl_merge_sign_M3515.bat
 endif		# endif _ENABLE_BL_ENCRYPTED_
endif		# endif _BUILD_OTA_E_ 
endef

define generate_7z-c0200a_ca_enable
	rm -f ${ROOT_PRJ}/${CA_AP_DIR}/${PADDING}
	cp -f ../prj/${TOOLS}/${PADDING} ${ROOT_PRJ}/${CA_AP_DIR}
	rm -f ${ROOT_PRJ}/${CA_AP_DIR}/${SECURE1}
	cp -f ../prj/${TOOLS}/${SECURE1} ${ROOT_PRJ}/${CA_AP_DIR}
	rm -f ${ROOT_PRJ}/${CA_AP_DIR}/${VERSION_APPENDER}
	cp -f ../prj/${TOOLS}/${VERSION_APPENDER} ${ROOT_PRJ}/${CA_AP_DIR}
	rm -f ${ROOT_PRJ}/${CA_AP_DIR}/${SBP_SIGN_TEST}
	cp -f ../prj/${TOOLS}/${SBP_SIGN_TEST} ${ROOT_PRJ}/${CA_AP_DIR}
	rm -f ${ROOT_PRJ}/${CA_AP_DIR}/${MERGER}
	cp -f ../prj/${TOOLS}/${MERGER} ${ROOT_PRJ}/${CA_AP_DIR}
	rm -f ${ROOT_PRJ}/${CA_AP_DIR}/${SSD_SIGN_TEST}
	cp -f ../prj/${TOOLS}/${SSD_SIGN_TEST} ${ROOT_PRJ}/${CA_AP_DIR}

ifdef _ENABLE_ALI_DEMO_KEY_DEBUG_
	$(call pre_boot_code-c0200a_ca_enable)
	$(call pre_boot_total_area-c0200a_ca_enable)
	@cp -f ${ROOT_PRJ}/${CA_AS_DIR}/AUX_Code_Enc_demo_M3515B.abs ${ROOT_PRJ}/${CA_AS_DIR}/AUX_Code_Enc_demo.abs;
	@cp -f ${ROOT_PRJ}/${CA_AS_DIR}/AUX_Code_sign_demo_M3515B_ali.abs ${ROOT_PRJ}/${CA_AS_DIR}/AUX_Code_sign_demo_ali.abs;
	cd ${ROOT_PRJ}/${CA_AS_DIR} && \
		../../../../../${TOOLS}/${BL_TOOL} script/AS_Merge_ALi.cmd;
	@cp -f ${ROOT_PRJ}/${CA_AS_DIR}/output/boot_total_area.abs ${ROOT_PRJ}/${CA_AP_DIR}/c0200a_bloader_s.bin	
else
	@cp -f ${ROOT_PRJ}/${CA_AS_DIR}/AUX_Code_Enc_demo_M3515B.abs ${ROOT_PRJ}/${CA_AS_DIR}/AUX_Code_Enc_demo.abs;
	@cp -f ${ROOT_PRJ}/${CA_AS_DIR}/AUX_Code_sign_demo_M3515B_c0200a.abs ${ROOT_PRJ}/${CA_AS_DIR}/AUX_Code_sign_demo_c0200a.abs;
	cd ${ROOT_PRJ}/${CA_AS_DIR} && \
		../../../../../${TOOLS}/${BL_TOOL} script/AS_Merge_C0200A.cmd && \
	@cp -f ${ROOT_PRJ}/${CA_AS_DIR}/output/boot_total_area.abs ${ROOT_PRJ}/${CA_AP_DIR}/c0200a_bloader_s.bin
endif

	cd ${ROOT_PRJ}/${CA_AP_DIR}; \
	./pre_build_padding_M3515B_fw.bat	

	cd ${ROOT_PRJ}/${CA_AP_DIR}; \
	./pre_build_sec_M3515_fw_encrypt.bat
	
	cd ${ROOT_PRJ}/${CA_AP_DIR}; \
	./pre_build_version_M3515B_fw.bat
	
	cd ${ROOT_PRJ}/${CA_AP_DIR}; \
	./pre_build_sbp_sign_M3515B_fw.bat
	
ifdef _MPLOADER_UPG_HOST_ENABLE_
	cd ${ROOT_PRJ}/${CA_AP_DIR}; \
	cp ../c0200a_bloader_s.bin ./; \
	cp ../blocks_script_fw_mploader_host.txt ./; \
	../../../../../${TOOLS}/${MERGER} blocks_script_fw_mploader_host.txt;\
	cp product_sabbat_dual.abs ../; \
	cp product_sabbat_dual.abs ../../../../../../obj
else
	cd ${ROOT_PRJ}/${CA_AP_DIR}; \
	cp ../c0200a_bloader_s.bin ./; \
	cp ../blocks_script_fw.txt ./; \
	../../../../../${TOOLS}/${MERGER} blocks_script_fw.txt;\
	cp product_sabbat_dual.abs ../; \
	cp product_sabbat_dual.abs ../../../../../../obj;\
	cp ../blocks_script_upg.txt ./; \
	../../../../../${TOOLS}/${MERGER} blocks_script_upg.txt;\
	cp product_upg.abs ../; \
	cp product_upg.abs ../../../../../../obj
endif   #endif _MPLOADER_UPG_HOST_ENABLE_

	cd ${ROOT_PRJ}/${CA_AP_DIR}; \
	./pre_build_ssd_sign_M3515B_upg.bat
	
endef

define generate_7z-3515b

	rm -f ${ROOT_PRJ}/app.bin
	rm -f ${ROOT_PRJ}/app_see.bin
	cp -f ${OUT}.7z ${ROOT_PRJ}/app.bin
	cp -f ${SEE_OUT}.7z ${ROOT_PRJ}/app_see.bin

ifdef _ENABLE_ALI_DEMO_KEY_DEBUG_
	$(call pre_boot_code-c0200a_ca_enable)
	$(call pre_boot_total_area-c0200a_ca_enable)
	@cp -f ${ROOT_PRJ}/${CA_AS_DIR}/AUX_Code_Enc_demo_M3515B.abs ${ROOT_PRJ}/${CA_AS_DIR}/AUX_Code_Enc_demo.abs;
	@cp -f ${ROOT_PRJ}/${CA_AS_DIR}/AUX_Code_sign_demo_M3515B_ali.abs ${ROOT_PRJ}/${CA_AS_DIR}/AUX_Code_sign_demo_ali.abs;
	cd ${ROOT_PRJ}/${CA_AS_DIR} && \
		../../../../../${TOOLS}/${BL_TOOL} script/AS_Merge_ALi.cmd;
	@cp -f ${ROOT_PRJ}/${CA_AS_DIR}/output/boot_total_area.abs ${ROOT_PRJ}/${CA_AP_DIR}/c0200a_bloader_s.bin	
else
	@cp -f ${ROOT_PRJ}/${CA_AS_DIR}/AUX_Code_Enc_demo_M3515B.abs ${ROOT_PRJ}/${CA_AS_DIR}/AUX_Code_Enc_demo.abs;
	@cp -f ${ROOT_PRJ}/${CA_AS_DIR}/AUX_Code_sign_demo_M3515B_c0200a.abs ${ROOT_PRJ}/${CA_AS_DIR}/AUX_Code_sign_demo_c0200a.abs;
	cd ${ROOT_PRJ}/${CA_AS_DIR} && \
		../../../../../${TOOLS}/${BL_TOOL} script/AS_Merge_C0200A.cmd;
	@cp -f ${ROOT_PRJ}/${CA_AS_DIR}/output/boot_total_area.abs ${ROOT_PRJ}/${CA_AP_DIR}/c0200a_bloader_s.bin;
endif
	
	cp -f ${ROOT_PRJ}/c0200a_ap/* ${ROOT_PRJ}
	
	cd ${ROOT_PRJ}; \
	${TOOL}/${PADDING} app.bin app_p.bin 210000;\
	${TOOL}/${PADDING} app_see.bin app_see_p.bin E0000;\
	${TOOL}/${SECURE1} -E AES_CBC decrypt_key.bin app_p.bin app_se.bin;\
	${TOOL}/${SECURE1} -E AES_CBC decrypt_key.bin app_see_p.bin app_see_se.bin;\
	${TOOL}/${VERSION_APPENDER} app_se.bin app_v.bin 0001;\
	${TOOL}/${VERSION_APPENDER} app_see_se.bin app_see_v.bin 0001;\
	${TOOL}/${SBP_SIGN_TEST} app_v.bin app_s.bin;\
	${TOOL}/${SBP_SIGN_TEST} app_see_v.bin app_see_s.bin;\
	${TOOL}/${MERGER} blocks_script_aui.txt;\
	cp product_sabbat_dual.abs ../../../../../obj
endef
	
define generate_7z-normal
	rm -f app_${OUT}.bin
	cp -f ${OUT}.7z ${ROOT_PRJ}/app.bin
	cp -f ${SEE_OUT}.7z ${ROOT_PRJ}/app_see.bin
	cp -f ${ROOT_PRJ}/${MEMCFG} ${ROOT_PRJ}/memcfg_3503.abs
	cp -f ${ROOT_PRJ}/$(DEF_DB) ${ROOT_PRJ}/factory_data_sabbat.bin 
	cd ${ROOT_PRJ}; \
	  ../../../../${TOOLS}/${merge_tool} ${BSP}
endef

define dual_generate_7z
generate_7z:
ifdef _CAS9_CA_ENABLE_
	$(call generate_7z-cas9_ca_enable)
else	
ifdef _C0200A_CA_ENABLE_
	$(call generate_7z-c0200a_ca_enable)
else
ifdef _BOARD_M3515B_01V01_
	$(call generate_7z-3515b)
else
	$(call generate_7z-normal)
endif
endif		# endif _C0200A_CA_ENABLE_
endif		# endif _CAS9_CA_ENABLE_
endef

ifdef _AUI_

ifdef _AUI_TEST_
ifdef _BUILD_OTA_E_
LFLAG_AUI+= -L$(DDK_DIR) -laui
else
LFLAG_AUI+= -L$(DDK_DIR) -laui_test -laui
endif
endif
ifdef _AUI_NESTOR_
ifdef _TEST_OLD_CI_
LFLAG_AUI+= -L$(DDK_DIR) -lnestor -laui
else
LFLAG_AUI+= -L$(DDK_DIR) --start-group -laui_nestor -laliciframework --end-group -laui
endif
endif

endif

define dual_link
link:
ifdef _C0200A_CA_ENABLE_
ifndef _BUILD_UPG_LOADER_
	${OBJCOPY} --rename-section .data=.default_db -I binary  -B mips \
	           -O elf32-tradlittlemips ${ROOT_PRJ}/${DEF_DB} default_db.o
endif
endif
	${LD} ${LDFLAGS} ${NEED} $(shell ls $(PLUGINEXT_DIR)/*.o ) -o ${OUT}.out -Map ${OUT}.map \
	  -T lscript.ld ${LIB} -L$(DDK_DIR) -lplus_v40b $(DDK_DIR)/libHDMI.a $(LFLAG_AUI) -lstb ${USB_WIFI_LIB} $(USB_3G_LIB)\
	   --start-group ${SAT2IP_LIB} --end-group \
	   --start-group ${ALL_LIBS} ${EXTRA_LIBS} \
	   $(MHEG5_V2_LIB) \
	   -lstb $(NFLC_LIB) --end-group \
	   -lstb -l7zip -lm ${LIBSTDCPP} -lgcc -lc ${LIBE}
	${OBJCOPY} -O binary ${OUT}.out ${OUT}.abs
endef

define single_compress_7z
compress_7z :
	${OBJCOPY} -R .flash -O binary ${OUT}.out ${OUT}; \
	${OBJCOPY} -j .flash -O binary ${OUT}.out flash.sec; \
	rm -f ${OUT}.7z; \
#add for fast boot up
ifdef _BUILD_OTA_E_
	../prj/${TOOLS}/lzma e ${OUT} ${OUT}.7z -lc0 -lp2
else
ifdef _COMPRESS_LZO
	../prj/${TOOLS}/lzox99 ${OUT} ${OUT}.7z
else
	../prj/${TOOLS}/lzma e ${OUT} ${OUT}.7z -lc0 -lp2
endif
endif
endef

define single_generate_7z
generate_7z :
	rm -f app_${OUT}.bin
	cp -f ${OUT}.7z ${ROOT_PRJ}/app.bin
	cp -f ${ROOT_PRJ}/$(DEF_DB) ${ROOT_PRJ}/factory_data_sabbat.bin
	cp -f ${ROOT_PRJ}/${MEMCFG} ${ROOT_PRJ}/memcfg_3503.abs
	cd ${ROOT_PRJ}; \
	  ../../../../${TOOLS}/${merge_tool} ${BSP}
endef

define single_link
link :
	${LD} ${LDFLAGS} ${NEED} $(shell ls $(PLUGINEXT_DIR)/*.o ) $(shell ls $(PLUGINDDK_DIR)/*.o ) -o ${OUT}.out -Map ${OUT}.map \
	  -T lscript.ld ${LIB} $(LIB_HDMI)  -lstb ${USB_WIFI_LIB} $(USB_3G_LIB) ${NET_LINK} \
	   ${ALL_LIBS} \
	   $(MHEG5_V2_LIB) \
	   -lstb -l7zip -lm -lgcc -lc ${LIBE}
	${OBJCOPY} -O binary ${OUT}.out ${OUT}.abs
endef

define common_compress_7z
ifdef DUAL_ENABLE
$(call dual_compress_7z)
else
$(call single_compress_7z)
endif
endef

define common_generate_7z
ifdef DUAL_ENABLE
$(call dual_generate_7z)
else
$(call single_generate_7z)
endif
endef

define common_link
ifdef DUAL_ENABLE
$(call dual_link)
else
$(call single_link)
endif
endef

$(eval $(call common_compress_7z))
$(eval $(call common_generate_7z))
$(eval $(call common_link))

link_ota :
ifdef _BUILD_USB_LOADER_
	${LD} ${LDFLAGS} ${NEED} $(shell ls $(PLUGINEXT_DIR)/*_ntfs.o ) -o ${OUT}.out -Map ${OUT}.map \
	  -T lscript.ld ${LIB} $(LIB_HDMI) -lstb \
	   ${DDKLIB}.a ${PVR_PLUS}.a ${SMOD_LIB} ${CA_LIB} \
	   -lstb -l7zip -lm -lgcc -lc ${LIBE} ${EXTRA_LIBS}
	${OBJCOPY} -O binary ${OUT}.out ${OUT}.abs
  ifdef _BUILD_UPG_LOADER_
	  cp ${OUT}.abs upg_app.bin
  endif
else # not _BUILD_USB_LOADER_
	${LD} ${LDFLAGS} ${NEED} -o ${OUT}.out -Map ${OUT}.map \
	  -T lscript.ld ${LIB} $(LIB_HDMI) -lstb \
	   ${DDKLIB}.a ${SMOD_LIB} \
	   -lstb -l7zip -lm -lgcc -lc ${LIBE} ${EXTRA_LIBS}
	${OBJCOPY} -O binary ${OUT}.out ${OUT}.abs
#	cp -f ${OUT}.out $(RUN_DIR)/
#	${OBJDUMP} -D ${OUT}.out > ${OUT}.dis
endif

see_link : 
	${LD} ${LDFLAGS} ${PLUGIN_OBJ} -o ${SEE_OUT}.out -Map ${SEE_OUT}.map \
	  -T ${SEE_LSCR} ${LIB} $(LIB_HDMI) $(DDK_DIR)/${SEELIB}.a \
	    $(DDK_DIR)/${MPG_LIB}.a liblog.a  libmp3dec.a\
	    -lm -lgcc -lc ${LIBE}
	${OBJCOPY} -O binary ${SEE_OUT}.out ${SEE_OUT}.abs

ifdef _NEED_SIG_SEE_
	cp -f ${SEE_OUT}.abs ${ROOT_PRJ}/${CA_AP_DIR}; 	
	cp -f ${ROOT_PRJ}/${CA_AP_DIR}/${BOOTCFG35} boot.cfg;
ifdef _LINUX_COMPILER_ENVIRONMENT_
	cd ${ROOT_PRJ}/${CA_AP_DIR}; \
	dos2unix *.sh;\
	./see_sig_linux.sh ${SEE_OUT} ${SIGPARA2};
else
	cd ${ROOT_PRJ}/${CA_AP_DIR}; \
	dos2unix *.sh;\
	./see_sig.sh ${SEE_OUT} ${SIGPARA2};
endif	
	cp -f ${ROOT_PRJ}/${CA_AP_DIR}/s3503_sabat.ini ./
	cp -f ${ROOT_PRJ}/${CA_AP_DIR}/${SEE_OUT}.sig ./
	unix2dos s3503_sabat.ini 
ifdef _CAS9_VSC_ENABLE_
	cd ${ROOT_PRJ}/${CA_AP_DIR}; \
	./see_sig_vsc.sh ${SEE_OUT};
	cp -f ${ROOT_PRJ}/${CA_AP_DIR}/s3503_sabat_vsc.ini ./
	cp -f ${ROOT_PRJ}/${CA_AP_DIR}/${SEE_OUT}.sig ./
	unix2dos s3503_sabat_vsc.ini 
endif
endif

see_link_ota :
ifdef _BUILD_USB_LOADER_
	${LD} ${LDFLAGS} -o ${SEE_OUT}.out -Map ${SEE_OUT}.map \
	  -T ${SEE_LSCR} ${LIB} $(LIB_HDMI) $(DDK_DIR)/${SEELIB}.a \
	    $(DDK_DIR)/${MPG_LIB}.a\
	    -lm -lgcc -lc ${LIBE}
	${OBJCOPY} -O binary ${SEE_OUT}.out ${SEE_OUT}.abs
	cp ${SEE_OUT}.abs upg_app_see.bin
else
	${LD} ${LDFLAGS} -o ${SEE_OUT}.out -Map ${SEE_OUT}.map \
	  -T ${SEE_LSCR} ${LIB} $(LIB_HDMI) $(DDK_DIR)/${SEELIB}.a \
	    -lm -lgcc -lc ${LIBE}
	${OBJCOPY} -O binary ${SEE_OUT}.out ${SEE_OUT}.abs
endif

cleanld :
	rm -f ${OUT}.out ${OUT}.map ${OUT}.dis ${OUT}.abs libstb.a \
	  ${OUT} flash.sec ${OUT}.gz ${OUT}.7z app_${OUT}.bin

label :
	${MAKE} -f Makefile35.cmd label

label_core :
	${MAKE} -f Makefile35.cmd label_core

label_sec :
	${MAKE} -f Makefile35.cmd label_sec

ddk:	
	${MAKE} -f Makefile35.cmd ddk

sdk: plus
	${MAKE} -f Makefile35.cmd sdk

ddk_clean :
	${MAKE} -f Makefile35.cmd ddk_clean
	
sdk_clean : plus_clean
	${MAKE} -f Makefile35.cmd sdk_clean

plus_clean: pplus_clean
	${MAKE} -f Makefile35.cmd plus_clean
	
sdk_rel:
	${MAKE} -f Makefile35.cmd sdk_root
	${MAKE} -f Makefile35.cmd sdk_rel_35

plus: pplus
	${MAKE} -f Makefile35.cmd plus

pplus:
	${MAKE} -f Makefile35.cmd pplus

pplus_clean:
	${MAKE} -f Makefile35.cmd pplus_clean

dis:
	cd ${ROOT}/obj ;\
	sde-objdump -D ${OUT}.out > ${OUT}.dis
	
see_dis:
	cd ${ROOT}/obj ;\
	sde-objdump -D ${SEE_OUT}.out > ${SEE_OUT}.dis
bin:
	echo Step 0: Check perm ...
	-chmod -R a+x ../../../../${TOOLS}/*
	echo Step 1: Compiler application ...
	echo Step 2: Compress application bin file ...
	${MAKE} -f Makefile35.cmd compress_7z
	echo Step 3: Generate Flash file ...
	${MAKE} -f Makefile35.cmd generate_7z
	cp -f product_sabbat_*.abs $(ROOT)/obj/
	echo All finished!

mheg5_v20_all:
	${MAKE} -f Makefile35.cmd mheg5_v20_core
	${MAKE} -f Makefile35.cmd mheg5_v20_app
	
mheg5_v20_core:
	${MAKE} -f Makefile35.cmd mheg5_v20_core
	
mheg5_v20_app:
	${MAKE} -f Makefile35.cmd mheg5_v20_app

mheg5_v20_all_clean :
	${MAKE} -f Makefile35.cmd mheg5_v20_core_clean
	${MAKE} -f Makefile35.cmd mheg5_v20_app_clean

mheg5_v20_core_clean :
	${MAKE} -f Makefile35.cmd mheg5_v20_core_clean

mheg5_v20_app_clean :
	${MAKE} -f Makefile35.cmd mheg5_v20_app_clean

mheg5_v20_rel:
	${MAKE} -f Makefile35.cmd mheg5_v20_rel

ciplus_rel:
	${MAKE} -f Makefile35.cmd ciplus_rel
bakcp:
	${MAKE} -f Makefile35.cmd bakcp

aui :
	${MAKE} -f Makefile35.cmd aui
	
alici :
	${MAKE} -f Makefile35.cmd alici
